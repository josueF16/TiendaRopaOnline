-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.carrito
(
    idcarrito integer NOT NULL DEFAULT nextval('carrito_idcarrito_seq'::regclass),
    usuario integer,
    productoscarrito jsonb[],
    CONSTRAINT carrito_pkey PRIMARY KEY (idcarrito)
);

CREATE TABLE IF NOT EXISTS public.color
(
    idcolor integer NOT NULL DEFAULT nextval('color_idcolor_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT color_pkey PRIMARY KEY (idcolor)
);

CREATE TABLE IF NOT EXISTS public.descuento
(
    iddescuento integer NOT NULL DEFAULT nextval('descuento_iddescuento_seq'::regclass),
    porcentaje numeric,
    fechaexpiracion date,
    productoid integer,
    CONSTRAINT descuento_pkey PRIMARY KEY (iddescuento)
);

CREATE TABLE IF NOT EXISTS public.detallesmetodopago
(
    iddetallesmetodopago integer NOT NULL DEFAULT nextval('detallesmetodopago_iddetallesmetodopago_seq'::regclass),
    numerotarjeta character varying(255) COLLATE pg_catalog."default",
    fechaexpiracion date,
    codigoseguridad character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT detallesmetodopago_pkey PRIMARY KEY (iddetallesmetodopago)
);

CREATE TABLE IF NOT EXISTS public.filtro
(
    idfiltro integer NOT NULL DEFAULT nextval('filtro_idfiltro_seq'::regclass),
    talla integer,
    color integer,
    preciominimo numeric,
    preciomaximo numeric,
    CONSTRAINT filtro_pkey PRIMARY KEY (idfiltro)
);

CREATE TABLE IF NOT EXISTS public.informacionenvio
(
    idinformacionenvio integer NOT NULL DEFAULT nextval('informacionenvio_idinformacionenvio_seq'::regclass),
    nombredestinatario character varying(255) COLLATE pg_catalog."default",
    direccionenvio text COLLATE pg_catalog."default",
    ciudad character varying(255) COLLATE pg_catalog."default",
    codigopostal character varying(255) COLLATE pg_catalog."default",
    pais character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT informacionenvio_pkey PRIMARY KEY (idinformacionenvio)
);

CREATE TABLE IF NOT EXISTS public.inventario
(
    idinventario integer NOT NULL DEFAULT nextval('inventario_idinventario_seq'::regclass),
    producto integer,
    cantidaddisponible integer,
    CONSTRAINT inventario_pkey PRIMARY KEY (idinventario)
);

CREATE TABLE IF NOT EXISTS public.metodopago
(
    idmetodopago integer NOT NULL DEFAULT nextval('metodopago_idmetodopago_seq'::regclass),
    tipo character varying(255) COLLATE pg_catalog."default",
    detallesmetodopago integer,
    CONSTRAINT metodopago_pkey PRIMARY KEY (idmetodopago)
);

CREATE TABLE IF NOT EXISTS public.pedido
(
    idpedido integer NOT NULL DEFAULT nextval('pedido_idpedido_seq'::regclass),
    usuario integer,
    productospedido jsonb[],
    informacionenvio integer,
    metodopago integer,
    fecha timestamp without time zone,
    CONSTRAINT pedido_pkey PRIMARY KEY (idpedido)
);

CREATE TABLE IF NOT EXISTS public.producto
(
    idproducto integer NOT NULL DEFAULT nextval('producto_idproducto_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default",
    descripcion text COLLATE pg_catalog."default",
    precio numeric,
    resenas integer[],
    CONSTRAINT producto_pkey PRIMARY KEY (idproducto)
);

CREATE TABLE IF NOT EXISTS public.resena
(
    idresena integer NOT NULL DEFAULT nextval('resena_idresena_seq'::regclass),
    usuario integer,
    producto integer,
    puntuacion integer,
    comentario text COLLATE pg_catalog."default",
    fecha timestamp without time zone,
    CONSTRAINT resena_pkey PRIMARY KEY (idresena)
);

CREATE TABLE IF NOT EXISTS public.resumencarrito
(
    idresumencarrito integer NOT NULL DEFAULT nextval('resumencarrito_idresumencarrito_seq'::regclass),
    totalproductos integer,
    totalprecio numeric,
    carritoid integer,
    CONSTRAINT resumencarrito_pkey PRIMARY KEY (idresumencarrito)
);

CREATE TABLE IF NOT EXISTS public.talla
(
    idtalla integer NOT NULL DEFAULT nextval('talla_idtalla_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT talla_pkey PRIMARY KEY (idtalla)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    idusuario integer NOT NULL DEFAULT nextval('usuario_idusuario_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default",
    direccion character varying(255) COLLATE pg_catalog."default",
    correoelectronico character varying(255) COLLATE pg_catalog."default",
    contrasena character varying(255) COLLATE pg_catalog."default",
    historialpedidos integer[],
    CONSTRAINT usuario_pkey PRIMARY KEY (idusuario),
    CONSTRAINT usuario_correoelectronico_key UNIQUE (correoelectronico)
);

ALTER TABLE IF EXISTS public.carrito
    ADD CONSTRAINT carrito_usuario_fkey FOREIGN KEY (usuario)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.descuento
    ADD CONSTRAINT descuento_productoid_fkey FOREIGN KEY (productoid)
    REFERENCES public.producto (idproducto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.filtro
    ADD CONSTRAINT filtro_color_fkey FOREIGN KEY (color)
    REFERENCES public.color (idcolor) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.filtro
    ADD CONSTRAINT filtro_talla_fkey FOREIGN KEY (talla)
    REFERENCES public.talla (idtalla) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inventario
    ADD CONSTRAINT inventario_producto_fkey FOREIGN KEY (producto)
    REFERENCES public.producto (idproducto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.metodopago
    ADD CONSTRAINT metodopago_detallesmetodopago_fkey FOREIGN KEY (detallesmetodopago)
    REFERENCES public.detallesmetodopago (iddetallesmetodopago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedido
    ADD CONSTRAINT pedido_informacionenvio_fkey FOREIGN KEY (informacionenvio)
    REFERENCES public.informacionenvio (idinformacionenvio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedido
    ADD CONSTRAINT pedido_metodopago_fkey FOREIGN KEY (metodopago)
    REFERENCES public.metodopago (idmetodopago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedido
    ADD CONSTRAINT pedido_usuario_fkey FOREIGN KEY (usuario)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resena
    ADD CONSTRAINT resena_producto_fkey FOREIGN KEY (producto)
    REFERENCES public.producto (idproducto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resena
    ADD CONSTRAINT resena_usuario_fkey FOREIGN KEY (usuario)
    REFERENCES public.usuario (idusuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resumencarrito
    ADD CONSTRAINT resumencarrito_carritoid_fkey FOREIGN KEY (carritoid)
    REFERENCES public.carrito (idcarrito) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;